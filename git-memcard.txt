Git commands:

Getting help:
> git help <verb> (ie git help config)

to check settings:
> git config --list

to user name :
> git config --global user.name "andrew philip"

to initializing a repository in an existing directory
> git init

to add a file or bunch of files
> git add <filename>
> git add .

to commit 
> git commit -m 'initial project version'
> git commit --amend 
[ git commit -m 'initial comment'; 
  git add forgotten_file; 
  git commit --amend;]



to clone a repository:
> git clone [url]
> git clone https://github.com/username/reponame
> git clone https://github.com/username/reponame repodiffname (target dir is repodiffname)


to check status of your files
> git status

to ignore certain file extensions not to be committed
1. create .gitignore file
2. to ignore all jpg files ( *.jpg)

to compare your staged changes to your last commit
> git diff --staged
> git diff --cached ( to see what you have staged so far)

to remove files
> git rm filename

to rename a file
> git mv file_from file_to

to get log
> git log

to see which remote servers you have configured
> git remote -v

to add remote repository
> git remote add <shortname> <repo-url>

to pull data to your local repository 
> git fetch [remote-name]  (this does not merge any of your work)
> git pull (this fetches data from server  and automatically tries to merge it into your codebase)

to push code upstream
> git push [remote-name] [branch-name]
> git push origin master


to inspect a remote
> git remote show [remote-name]
> git remote show origin


to rename remote
> git remote rename andrew  gabriel

to list tags
> git tag
> git tag -l 'v1.7.5*' ( if you are intereset in a specific series)

to create a tag
> git tag -a v1.3 -m 'version 1.3'

to show tag data 
> git show v1.3

